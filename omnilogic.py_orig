import time
import json
import requests
import xmltodict
import collections
from xml.etree import ElementTree


class OmniLogic:
    def __init__(self, username, password, systemid):
        self.username = username
        self.password = password
        self.systemid = systemid
        self.verbose = True
        self.logged_in = False

    def connect(self):
        connect_response = self.call_api("login")

        if connect_response is None:
            return False

        self.token = self.get_login_token(connect_response)
        if self.token is None:
            return False

        self.logged_in = True

        return self.refresh()

    def call_api(self, request_type, format_params=None):
        url = "https://app1.haywardomnilogic.com/HAAPI/HomeAutomation/API.ashx"
        if request_type == "login":
            request_xml = """<?xml version="1.0" encoding="UTF-8"?>
<Request>
  <Name>Login</Name>
  <Parameters>
    <Parameter name="UserName" dataType="string">{username}</Parameter>
    <Parameter name="Password" dataType="string">{password}</Parameter>
  </Parameters>
</Request>""".format(
                username=self.username, password=self.password
            )

        if self.logged_in:
            format_params["token"] = self.token

        if self.verbose:
            print(request_xml)
        r = requests.post(url, data=request_xml)
        print(r.content)
        if self.verbose:
            print(r)

        if "xml version" in r.text:
            fixed_output = r.text[38:].lower()
        else:
            fixed_output = r.text.lower()

        if "You haven" in fixed_output:
            return None

        return xmltodict.parse(fixed_output)

    def get_login_token(self, response):
        test = response
        print(test["response"]["parameters"]["parameter"])
        t = test["response"]["parameters"]["parameter"]
        for i in t:
            print(i)

        print("##### XML TEST ####")
        tree = ElementTree.fromstring(response.content)
        jsonString = json.dumps(xmltodict.parse(tree), indent=4)
        print(jsonString)
